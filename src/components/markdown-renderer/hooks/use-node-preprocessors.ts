/*
 * SPDX-FileCopyrightText: 2021 The HedgeDoc developers (see AUTHORS file)
 *
 * SPDX-License-Identifier: AGPL-3.0-only
 */

import { useCallback } from 'react'
import type { Document } from 'domhandler'
import { ColoredBlockquoteNodePreprocessor } from '../node-preprocessors/colored-blockquote-node-preprocessor'
import { AnchorNodePreprocessor } from '../node-preprocessors/anchor-node-preprocessor'
import { SanitizerNodePreprocessor } from './dom-purifier-node-preprocessor'
import type { NodeProcessor } from '../node-preprocessors/node-processor'

export type NodeProcess = (document: Document) => Document

/**
 * @param baseUrl The base url for relative links
 * @param nodePreProcessors A function that processes nodes after parsing the html code that is generated by markdown it.
 */
export const useNodePreprocessors = (
  baseUrl: string,
  nodePreProcessors?: NodeProcessor[]
): NodeProcess =>  useCallback(
    (nodes: Document) =>
      [
        ...(nodePreProcessors ?? []),
        new ColoredBlockquoteNodePreprocessor(),
        new AnchorNodePreprocessor(baseUrl),
        new SanitizerNodePreprocessor()
      ].reduce((previousValue, currentValue) => currentValue.process(previousValue), nodes),
    [baseUrl, nodePreProcessors]
  )
